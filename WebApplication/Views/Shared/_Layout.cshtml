<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-YA-Compatible" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>@ViewBag.Title</title>

    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    @Styles.Render("~/Content/font-awesome.min.css")

    @Styles.Render("~/Content/bootstrap.css")
    @Scripts.Render("~/Scripts/jquery-3.3.1.min.js")

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")

    @Styles.Render("~/Content/SimulMotLayouts.css");

    @RenderSection("scripts", required: false)

    <script>
        function recipeButtonCallback() {
            window.location.href = "@Url.Content("~/Shared/Recipe")";
        }

        function signOutButtonCallback() {
            window.location.href = "@Url.Content("~/Shared/SignOut")";
        }

        function monitoringButtonCallback() {
            window.location.href = "@Url.Content("~/Shared/Monitoring")";
        }

        function managementButtonCallback() {
            window.location.href = "@Url.Content("~/Shared/Management")";
        }

        function accountButtonCallback() {
            window.location.href = "@Url.Content("~/Shared/Account")";
        }

        function withdrawalButtonCallback() {
            window.location.href = "@Url.Content("~/Shared/WithDrawal")";
        }
        
        window.setTimeout(function () {
            $(".alert").fadeTo(500, 0).slideUp(500, function () {
                $(this).remove();
            });
        }, 2000);
    </script>
</head>
<body style="overflow-x : hidden">
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
        <a class = "navbar-brand" href = "@Url.Content("~/Shared/Home")">
            <img src="@Url.Content("~/Sources/logo.svg")" class="d-inline-block align-top" width='40' height='40' alt=''>
        </a>

        @Html.ActionLink("SimulMot", "Home", "Shared", new { area = "" }, new { @class = "navbar-brand" })

        <button class="navbar-toggler" type="button" data-toggle="collapse"
                data-target="#navbarToggler" aria-controls="navbarToggler" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarToggler">
            <ul class="navbar-nav mr-auto mt-nav-set-left">

                @if (Session["userId"] != null)
                {
                    <li class="mt-nav-item btn btn-outline-info" onclick="signOutButtonCallback()">
                        로그아웃
                    </li>

                    // 사용자 버튼 : 모니터링
                    if (Session["monitoring"].Equals("true"))
                    {
                        <li class="mt-nav-item btn btn-outline-light" onclick="monitoringButtonCallback()">
                            모니터링
                        </li>
                    }

                    else
                    {
                        <li class="mt-nav-item btn btn-outline-secondary" onclick="monitoringButtonCallback()">
                            모니터링
                        </li>
                    }

                    // 사용자 버튼 : 레시피
                    if (Session["recipe"].Equals("true"))
                    {
                        <li class="mt-nav-item btn btn-outline-light" onclick="recipeButtonCallback()">
                            레시피
                        </li>
                    }

                    else
                    {
                        <li class="mt-nav-item btn btn-outline-secondary" onclick="recipeButtonCallback()">
                            레시피
                        </li>
                    }

                    // 사용자 버튼 : 유저 관리
                    if (Session["management"].Equals("true"))
                    {
                        <li class="mt-nav-item btn btn-outline-light" onclick="managementButtonCallback()">
                            사용자 관리
                        </li>
                    }

                    else
                    {
                        <li class="mt-nav-item btn btn-outline-secondary" onclick="managementButtonCallback()">
                            사용자 관리
                        </li>
                    }

                    <li class="mt-nav-item btn-group dropdown">
                        <button class = "btn btn-outline-light dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            계정
                        </button>
                        
                        <div class="dropdown-menu">
                            <a class="dropdown-item" href="javascript:accountButtonCallback()">
                                정보수정
                            </a>
                            
                            <a class="dropdown-item" href="javascript:withdrawalButtonCallback()">
                                탈퇴
                            </a>
                        </div>
                    </li>
                }
            </ul>
        </div>
    </nav>

    @if (Session["message"] != null)
    {
    <div id="messageBox" class="alert alert-@Session["messageType"] alert-dismissible fade show" role="alert">
        @Session["message"]

        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    }

    <div class="container body-content" style="margin-top : 1.5em;">
        <div id="messageShower" style = "position : absolute; top : 0px;"> </div>

        <setion style="margin-bottom : 30%; padding-bottom : 30%;">
            @RenderBody()
        </setion>
</div>
</body>
</html>